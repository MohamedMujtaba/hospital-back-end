// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator zod {
  provider = "zod-prisma-types"
  // useMultipleFiles = true //  default is false
  // createInputTypes                 =  false  //  default is true
  // createModelTypes                 =  true   //  default is true
  // addInputTypeValidation           =  false  //  default is true
  // addIncludeType                   = false   //  default is true
  // addSelectType                    = false   //  default is true
  // validateWhereUniqueInput         =  true   //  default is false
  // createOptionalDefaultValuesTypes =  true   //  default is false
  // createRelationValuesTypes        =  true   //  default is false
  // createPartialTypes               =  true   //  default is false
  // useDefaultValidators             =  false  //  default is true
  // coerceDate                       =  false  //  default is true
  // writeNullishInModelTypes         =  true   //  default is false
}

model Patient {
  id          String   @id @default(cuid())
  name        String
  age         Int
  phoneNumber String?
  gander      Gander
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Gander {
  MALE
  FEMALE
}

model Doctor {
  id               String @id @default(cuid())
  name             String
  phoneNumber      String
  password         String
  acupation        String
  appointmentPrice Int
}

model Worker {
  id       String     @id @default(cuid())
  name     String
  password String
  role     WorkerRole
}

enum WorkerRole {
  REG
  LAB
  ADMIN
}

// pharmacy

model Medicine {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  price       Float
  quantity    Int
}

model Prescription {
  id         Int      @id @default(autoincrement())
  medicineId Int
  patient    String
  doctor     String
  date       DateTime @default(now())

  medicines PrescriptionMedicine[]
}

model PrescriptionMedicine {
  id             Int           @id @default(autoincrement())
  name           String
  description    String
  price          Int
  quantity       Int
  Prescription   Prescription? @relation(fields: [prescriptionId], references: [id])
  prescriptionId Int?
}
